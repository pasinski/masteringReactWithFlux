'use strict';

Object.defineProperty(exports, '__esModule', {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Input = (function (_Component) {
	_inherits(Input, _Component);

	function Input() {
		_classCallCheck(this, Input);

		_get(Object.getPrototypeOf(Input.prototype), 'constructor', this).apply(this, arguments);
	}

	_createClass(Input, [{
		key: 'render',
		value: function render() {
			var _props = this.props;
			var value = _props.value;
			var placeholder = _props.placeholder;
			var onBlur = _props.onBlur;
			var onFocus = _props.onFocus;
			var onChange = _props.onChange;
			var className = _props.className;
			var styles = _props.styles;
			var props = _props.props;

			var type = props && props.type ? props.type : 'text';

			return _react2['default'].createElement('input', _extends({ ref: 'autocompleter-input', type: type, value: value, placeholder: placeholder, onBlur: onBlur, onFocus: onFocus, onChange: onChange, className: className, style: styles }, props));
		}
	}], [{
		key: 'propTypes',
		value: {
			value: _react.PropTypes.string,
			placeholder: _react.PropTypes.string,
			onBlur: _react.PropTypes.func,
			onFocus: _react.PropTypes.func,
			onChange: _react.PropTypes.func,
			className: _react.PropTypes.string,
			styles: _react.PropTypes.object,
			props: _react.PropTypes.object
		},
		enumerable: true
	}]);

	return Input;
})(_react.Component);

exports['default'] = Input;
module.exports = exports['default'];